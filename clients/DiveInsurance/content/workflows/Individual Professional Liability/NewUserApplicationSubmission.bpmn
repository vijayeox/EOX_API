<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" id="Definitions_1r6em5n" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="4.2.0">
  <bpmn:process id="IPLNewPolicy" isExecutable="true">
    <bpmn:extensionElements>
      <camunda:executionListener expression="0" event="start" />
    </bpmn:extensionElements>
    <bpmn:endEvent id="EndEvent_19debzw" name="Insurance Application Completed">
      <bpmn:incoming>SequenceFlow_19lqizm</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:startEvent id="StartEvent_198mssd" name="Insure Fills Online Application" camunda:asyncAfter="true">
      <bpmn:extensionElements>
        <camunda:properties>
          <camunda:property name="template" value="csrInitiatesIpl" />
          <camunda:property name="fields" value="additionalInsured, country, tecRecEndorsment, section2Agreement,careerCoverage, initiatedByCsr, approved, scubaFit, cylinder,excessLiability, padiNotFoundCsrReview, efrToIPLUpgrade, paymentOptions,userGrandTotal, isRenewalFlow, start_date, CSRReviewRequired, RejectedPolicy,   policyStatus, efrToIPLUpgrade" />
        </camunda:properties>
      </bpmn:extensionElements>
      <bpmn:outgoing>SequenceFlow_161msdp</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:sequenceFlow id="SequenceFlow_161msdp" sourceRef="StartEvent_198mssd" targetRef="ExclusiveGateway_1a80v3g" />
    <bpmn:serviceTask id="Task_1mka1rj" name="Policy and COI Generation" camunda:expression="0">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="commands">
            <camunda:list>
              <camunda:value>{"command" : "file"}</camunda:value>
              <camunda:value>{"command" : "delegate", "delegate":"CleanUpDelegate"}</camunda:value>
              <camunda:value>{"command" : "delegate", "delegate":"PolicyDocument"}</camunda:value>
              <camunda:value>{"command" : "fileSave"}</camunda:value>
              <camunda:value>{"command" : "delegate", "delegate" : "DispatchNewPolicy"}</camunda:value>
            </camunda:list>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1rq996b</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_16ob5w0</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_19lqizm</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_19lqizm" sourceRef="Task_1mka1rj" targetRef="EndEvent_19debzw" />
    <bpmn:sequenceFlow id="SequenceFlow_0d6flow" name="Approved" sourceRef="Task_1s7qzh3" targetRef="ExclusiveGateway_06iy274">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${approved == "accepted"}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:userTask id="Task_1s7qzh3" name="CSR Review" camunda:asyncAfter="true" camunda:candidateUsers="{{role:CSR}}">
      <bpmn:extensionElements>
        <camunda:formData>
          <camunda:formField id="approved" type="boolean" defaultValue="false" />
        </camunda:formData>
        <camunda:properties>
          <camunda:property name="template" value="csrInitiatesIpl" />
        </camunda:properties>
        <camunda:executionListener event="start">
          <camunda:script scriptFormat="groovy">execution.setVariable('CSRReviewRequired', false)</camunda:script>
        </camunda:executionListener>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_0gvf8c9</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_0m69sz4</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_1r1a5vu</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0d6flow</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_199pho8</bpmn:outgoing>
    </bpmn:userTask>
    <bpmn:exclusiveGateway id="ExclusiveGateway_1a80v3g" camunda:asyncAfter="true">
      <bpmn:extensionElements>
        <camunda:executionListener event="start">
          <camunda:script scriptFormat="groovy">def additionalInsured = execution.getVariable('additionalInsured')
def country = execution.getVariable('country')
def tecRecEndorsment = execution.getVariable('tecRecEndorsment')
def section2Agreement = execution.getVariable('section2Agreement')
def internationalCoverages = execution.getVariable('careerCoverage')
def initiatedByCsr = execution.getVariable('initiatedByCsr')
def approved = execution.getVariable('approved')
def scubaFit = execution.getVariable('scubaFit')
def cylinder = execution.getVariable('cylinder')
def excessLiability = execution.getVariable('excessLiability')
def padiNotFoundCsrReview = execution.getVariable('padiNotFoundCsrReview')
def efrToIPLUpgrade = execution.getVariable('efrToIPLUpgrade')
def paymentOptions = execution.getVariable('paymentOptions')
def userGrandTotal = execution.getVariable('userGrandTotal')
def renewalFlow = execution.getVariable('isRenewalFlow')
def startDate = execution.getVariable('start_date')

boolean result1 = false
boolean result2 = false
boolean result3 = false
boolean result4 = false
boolean result5 = false
boolean result6 = true
boolean result7 = false
boolean result8 = false
boolean result9 = false
boolean result10 = false

if (additionalInsured == 'addAdditionalInsureds' ) {
 additionalInsured.each {
  if (it.businessRelation &amp;&amp; it.businessRelation == 'other') {
    result1 = true
  }
  if (it.doYouHaveAWrittenContract &amp;&amp; it.doYouHaveAWrittenContract=='no'){
    result1 = true
  }
 }
}

if(userGrandTotal &gt; 1500){
  result8 = true;
}

if (section2Agreement) {
  if (section2Agreement == true) {
    result2 = true;
  }
}
if (cylinder) {
  if (cylinder == "cylinderInspector" || cylinder == "cylinderInspectionInstructor") {
    result5 = true;
  }
}
if (excessLiability) {
  if (excessLiability == "excessLiabilityCoverage3000000" || excessLiability == "excessLiabilityCoverage4000000" || excessLiability == "excessLiabilityCoverage9000000") {
    result7 = true;
  }
}
if (paymentOptions) {
  if (paymentOptions == "creditCard") {
    result6 = false;
  }
}

if (internationalCoverages) {
  if (
    internationalCoverages == "internationalInstructor" ||
    internationalCoverages == "internationalAssistantInstructor" ||
    internationalCoverages == "internationalDivemaster" ||
    internationalCoverages == "internationalNonteachingSupervisoryInstructor" ||
    internationalCoverages ==
      "internationalDivemasterAssistantInstructorAssistingOnly"
  ) {
    result4 = true;
  }
}

if(country != "United States of America" &amp;&amp; country != "Mexico" &amp;&amp; country != "The Bahamas" &amp;&amp; country != "Turks and Caicos" &amp;&amp; country != "British Virgin Islands" &amp;&amp; country != "Cayman Islands" &amp;&amp; country != "Jamaica" &amp;&amp; country != "Aruba" &amp;&amp; country != "Curacao" &amp;&amp; country != "Grenada" &amp;&amp; country != "Barbados" &amp;&amp; country != "St Lucia" &amp;&amp; country != "Trinidad and Tobago" &amp;&amp; country != "Belize" &amp;&amp; country != "Costa Rica" &amp;&amp; country != "Dominican Republic" &amp;&amp; country != "Dominica" &amp;&amp; country != "Martinique" &amp;&amp; country != "Anguilla" &amp;&amp; country != "St Kitts and Nevis"){
  result9 = true;
}



if (
  (initiatedByCsr == false ||
    initiatedByCsr == "false" ||
    initiatedByCsr == "") &amp;&amp;
  ( tecRecEndorsment == "accepted" ||
    result1 ||
    result9 ||
    result2 ||
    result4 ||
    result6 ||
    result7 ||
    result8 ||
    efrToIPLUpgrade == true || efrToIPLUpgrade == "true" ||
    scubaFit == "scubaFitInstructor" ||
    result5 ||
    padiNotFoundCsrReview == "true" ||
    padiNotFoundCsrReview == true)
) {
  result3 = true;
}

execution.setVariable("CSRReviewRequired", result3);

if ((initiatedByCsr == true || initiatedByCsr == "true") &amp;&amp; (approved == "rejected" || approved == "onHold")) {
  execution.setVariable("RejectedPolicy", true);
} else {
  execution.setVariable("RejectedPolicy", false);
}</camunda:script>
        </camunda:executionListener>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_161msdp</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0xu2tpx</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_1maipgq</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_022khxp</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="SequenceFlow_0xu2tpx" sourceRef="ExclusiveGateway_1a80v3g" targetRef="Task_0giy3fm">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${CSRReviewRequired==true}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="SequenceFlow_1maipgq" name="Bypass CSR Approval" sourceRef="ExclusiveGateway_1a80v3g" targetRef="ExclusiveGateway_06iy274">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${CSRReviewRequired==false and RejectedPolicy != true}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="SequenceFlow_199pho8" name="Rejected/Onhold" sourceRef="Task_1s7qzh3" targetRef="Task_1g3m6bq">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${approved == "rejected" or approved== "onHold"}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:serviceTask id="Task_1g3m6bq" name="CSR Rejection or OnHold" camunda:expression="0">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="commands">
            <camunda:list>
              <camunda:value>{"command" : "fileSave"}</camunda:value>
            </camunda:list>
          </camunda:inputParameter>
        </camunda:inputOutput>
        <camunda:executionListener event="start">
          <camunda:script scriptFormat="groovy">def status = execution.getVariable('approved')
if(status == "rejected"){
	execution.setVariable("policyStatus","Rejected")	
}
if(status == "onHold"){
	execution.setVariable("policyStatus","On Hold")
}</camunda:script>
        </camunda:executionListener>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_199pho8</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_022khxp</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0gvf8c9</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_177n7jz</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_0gvf8c9" sourceRef="Task_1g3m6bq" targetRef="Task_1s7qzh3">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${approved == "onHold"}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="SequenceFlow_0m69sz4" sourceRef="Task_0giy3fm" targetRef="Task_1s7qzh3" />
    <bpmn:serviceTask id="Task_0giy3fm" name="Policy Status Change during Review" camunda:expression="0">
      <bpmn:extensionElements>
        <camunda:executionListener event="start">
          <camunda:script scriptFormat="groovy">def start_date = execution.getVariable('start_date')

execution.setVariable('policyStatus', 'Pending Approval')

execution.setVariable('csrPolicyPeriod', start_date)</camunda:script>
        </camunda:executionListener>
        <camunda:inputOutput>
          <camunda:inputParameter name="command">fileSave</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_0xu2tpx</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0m69sz4</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_022khxp" sourceRef="ExclusiveGateway_1a80v3g" targetRef="Task_1g3m6bq">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${RejectedPolicy == true}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:exclusiveGateway id="ExclusiveGateway_06iy274">
      <bpmn:incoming>SequenceFlow_0d6flow</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_1maipgq</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_16ob5w0</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_1b31ud4</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:serviceTask id="ServiceTask_1ssocdc" name="Cancel EFR Policy" camunda:asyncAfter="true" camunda:expression="0">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="commands">
            <camunda:list>
              <camunda:value>{"command": "file"}</camunda:value>
              <camunda:value>{"command" : "delegate", "delegate":"ProcessEFRCancellation"}</camunda:value>
            </camunda:list>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1b31ud4</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1rq996b</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_16ob5w0" sourceRef="ExclusiveGateway_06iy274" targetRef="Task_1mka1rj">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${efrToIPLUpgrade == "false" || efrToIPLUpgrade == false}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="SequenceFlow_1b31ud4" sourceRef="ExclusiveGateway_06iy274" targetRef="ServiceTask_1ssocdc">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${efrToIPLUpgrade == "true" || efrToIPLUpgrade == true}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="SequenceFlow_1rq996b" sourceRef="ServiceTask_1ssocdc" targetRef="Task_1mka1rj" />
    <bpmn:serviceTask id="Task_03fwvvy" name="CSR Cancel policy Mail" camunda:expression="0">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="commands">
            <camunda:list>
              <camunda:value>{"command" : "delegate", "delegate":"CsrRejection"}</camunda:value>
            </camunda:list>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1i8eylg</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1r1a5vu</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:exclusiveGateway id="ExclusiveGateway_17ldnvw">
      <bpmn:incoming>SequenceFlow_177n7jz</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1i8eylg</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="SequenceFlow_177n7jz" sourceRef="Task_1g3m6bq" targetRef="ExclusiveGateway_17ldnvw">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${approved == "rejected"}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="SequenceFlow_1i8eylg" sourceRef="ExclusiveGateway_17ldnvw" targetRef="Task_03fwvvy" />
    <bpmn:sequenceFlow id="SequenceFlow_1r1a5vu" sourceRef="Task_03fwvvy" targetRef="Task_1s7qzh3" />
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="IPLNewPolicy">
      <bpmndi:BPMNEdge id="SequenceFlow_1r1a5vu_di" bpmnElement="SequenceFlow_1r1a5vu">
        <di:waypoint x="910" y="539" />
        <di:waypoint x="664" y="539" />
        <di:waypoint x="664" y="340" />
        <di:waypoint x="664" y="292" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1i8eylg_di" bpmnElement="SequenceFlow_1i8eylg">
        <di:waypoint x="960" y="421" />
        <di:waypoint x="960" y="499" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_177n7jz_di" bpmnElement="SequenceFlow_177n7jz">
        <di:waypoint x="893" y="396" />
        <di:waypoint x="935" y="396" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1rq996b_di" bpmnElement="SequenceFlow_1rq996b">
        <di:waypoint x="1120" y="120" />
        <di:waypoint x="1277" y="120" />
        <di:waypoint x="1277" y="210" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1b31ud4_di" bpmnElement="SequenceFlow_1b31ud4">
        <di:waypoint x="1070" y="226" />
        <di:waypoint x="1070" y="160" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_16ob5w0_di" bpmnElement="SequenceFlow_16ob5w0">
        <di:waypoint x="1095" y="251" />
        <di:waypoint x="1240" y="251" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_022khxp_di" bpmnElement="SequenceFlow_022khxp">
        <di:waypoint x="354" y="276" />
        <di:waypoint x="354" y="518" />
        <di:waypoint x="843" y="518" />
        <di:waypoint x="843" y="436" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0m69sz4_di" bpmnElement="SequenceFlow_0m69sz4">
        <di:waypoint x="555" y="251" />
        <di:waypoint x="651" y="251" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0gvf8c9_di" bpmnElement="SequenceFlow_0gvf8c9">
        <di:waypoint x="793" y="396" />
        <di:waypoint x="701" y="396" />
        <di:waypoint x="701" y="291" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_199pho8_di" bpmnElement="SequenceFlow_199pho8">
        <di:waypoint x="751" y="270" />
        <di:waypoint x="843" y="270" />
        <di:waypoint x="843" y="356" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="759" y="283" width="82" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1maipgq_di" bpmnElement="SequenceFlow_1maipgq">
        <di:waypoint x="354" y="226" />
        <di:waypoint x="354" y="120" />
        <di:waypoint x="930" y="120" />
        <di:waypoint x="1057" y="239" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="613" y="86" width="63" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0xu2tpx_di" bpmnElement="SequenceFlow_0xu2tpx">
        <di:waypoint x="379" y="251" />
        <di:waypoint x="455" y="251" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="408" y="233" width="18" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0d6flow_di" bpmnElement="SequenceFlow_0d6flow">
        <di:waypoint x="751" y="251" />
        <di:waypoint x="1045" y="251" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="921" y="233" width="47" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_19lqizm_di" bpmnElement="SequenceFlow_19lqizm">
        <di:waypoint x="1340" y="251" />
        <di:waypoint x="1462" y="251" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_161msdp_di" bpmnElement="SequenceFlow_161msdp">
        <di:waypoint x="218" y="251" />
        <di:waypoint x="329" y="251" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="EndEvent_19debzw_di" bpmnElement="EndEvent_19debzw">
        <dc:Bounds x="1462" y="233" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1454" y="276" width="54" height="40" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="StartEvent_198mssd_di" bpmnElement="StartEvent_198mssd">
        <dc:Bounds x="182" y="233" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="156" y="276" width="89" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_1rp7im0_di" bpmnElement="Task_1mka1rj">
        <dc:Bounds x="1240" y="211" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="UserTask_06cefdr_di" bpmnElement="Task_1s7qzh3">
        <dc:Bounds x="651" y="211" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ExclusiveGateway_1a80v3g_di" bpmnElement="ExclusiveGateway_1a80v3g" isMarkerVisible="true">
        <dc:Bounds x="329" y="226" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_0ht06l6_di" bpmnElement="Task_1g3m6bq">
        <dc:Bounds x="793" y="356" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_0yg1fw4_di" bpmnElement="Task_0giy3fm">
        <dc:Bounds x="455" y="211" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ExclusiveGateway_06iy274_di" bpmnElement="ExclusiveGateway_06iy274" isMarkerVisible="true">
        <dc:Bounds x="1045" y="226" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_1ssocdc_di" bpmnElement="ServiceTask_1ssocdc">
        <dc:Bounds x="1020" y="80" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_1desson_di" bpmnElement="Task_03fwvvy">
        <dc:Bounds x="910" y="499" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ExclusiveGateway_17ldnvw_di" bpmnElement="ExclusiveGateway_17ldnvw" isMarkerVisible="true">
        <dc:Bounds x="935" y="371" width="50" height="50" />
      </bpmndi:BPMNShape>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
