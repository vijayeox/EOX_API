<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" id="Definitions_0hgo0bw" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="4.2.0">
  <bpmn:process id="IPLEndorsement" isExecutable="true">
    <bpmn:startEvent id="StartEvent_0qetve8" name="Endorsement Start form - new" camunda:asyncAfter="true">
      <bpmn:extensionElements>
        <camunda:properties>
          <camunda:property name="template" value="endorsementConsolidationIpl" />
          <camunda:property name="fields" value="AdditionalInsuredOption,additionalInsured, country, tecRecEndorsment, section2Agreement,endorsement_options, upgradeCareerCoverage, scubaFit, cylinder, excessLiability,paymentOptions, initiatedByCsr, CSRReviewRequired, policyStatus, RejectedPolicy, approved" />
        </camunda:properties>
      </bpmn:extensionElements>
      <bpmn:outgoing>SequenceFlow_1m44nyk</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:exclusiveGateway id="ExclusiveGateway_0spajg7" name="Payment Successful" camunda:asyncAfter="true">
      <bpmn:incoming>SequenceFlow_1ckr5am</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_11738jy</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_1gaibuf</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_1v1dk1z</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:serviceTask id="ServiceTask_1nlbeez" name="Policy and COI generation" camunda:asyncAfter="true" camunda:expression="0">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="commands">
            <camunda:list>
              <camunda:value>{"command" : "file"}</camunda:value>
              <camunda:value>{"command" : "delegate", "delegate":"CleanUpDelegate"}</camunda:value>
              <camunda:value>{"command" : "delegate", "delegate":"PolicyDocument"}</camunda:value>
              <camunda:value>{"command" : "fileSave"}</camunda:value>
              <camunda:value>{"command" : "delegate", "delegate" : "DispatchNewPolicy"}</camunda:value>
            </camunda:list>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1gaibuf</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_0isa8vl</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1qz971h</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:endEvent id="EndEvent_1ki3ogb" name="Insurance Application Completed">
      <bpmn:incoming>SequenceFlow_1qz971h</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:userTask id="UserTask_14i3m9l" name="CSR Review" camunda:asyncAfter="true" camunda:candidateUsers="{{role:CSR}}">
      <bpmn:extensionElements>
        <camunda:properties>
          <camunda:property name="template" value="endorsementConsolidationIpl" />
        </camunda:properties>
        <camunda:executionListener event="start">
          <camunda:script scriptFormat="groovy">execution.setVariable('policyStatus', 'Pending Approval')</camunda:script>
        </camunda:executionListener>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_16l2dji</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_11738jy</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_1yna7t6</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_12e5vo3</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_0isa8vl</bpmn:outgoing>
    </bpmn:userTask>
    <bpmn:sequenceFlow id="SequenceFlow_11738jy" name="No" sourceRef="ExclusiveGateway_0spajg7" targetRef="UserTask_14i3m9l">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${CSRReviewRequired==true}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="SequenceFlow_1gaibuf" name="Yes" sourceRef="ExclusiveGateway_0spajg7" targetRef="ServiceTask_1nlbeez">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${CSRReviewRequired==false and RejectedPolicy != true}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="SequenceFlow_1qz971h" sourceRef="ServiceTask_1nlbeez" targetRef="EndEvent_1ki3ogb" />
    <bpmn:sequenceFlow id="SequenceFlow_12e5vo3" sourceRef="UserTask_14i3m9l" targetRef="Task_037h9gn">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${approved == "rejected" or approved== "onHold"}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:serviceTask id="Task_037h9gn" name="CSR Rejection or OnHold" camunda:expression="0">
      <bpmn:extensionElements>
        <camunda:executionListener event="start">
          <camunda:script scriptFormat="groovy">def status = execution.getVariable('approved')
if(status == "rejected"){
	execution.setVariable("policyStatus","Rejected")	
}
if(status == "onHold"){
	execution.setVariable("policyStatus","On Hold")
}</camunda:script>
        </camunda:executionListener>
        <camunda:inputOutput>
          <camunda:inputParameter name="commands">
            <camunda:list>
              <camunda:value>{"command" : "fileSave"}</camunda:value>
            </camunda:list>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_12e5vo3</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_1v1dk1z</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_16l2dji</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_0bb7law</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_16l2dji" sourceRef="Task_037h9gn" targetRef="UserTask_14i3m9l">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${approved == "onHold"}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:serviceTask id="Task_1jrn5e5" name="Policy Status Change during Review" camunda:expression="0">
      <bpmn:extensionElements>
        <camunda:executionListener event="start">
          <camunda:script scriptFormat="groovy">def additionalInsured = execution.getVariable('additionalInsured')
def country = execution.getVariable('country')
def tecRecEndorsment = execution.getVariable('tecRecEndorsment')
def section2Agreement = execution.getVariable('section2Agreement')
def endorsementOptions = execution.getVariable('endorsement_options')
def coverage = endorsementOptions.modify_coverage
def personalInfo = endorsementOptions.modify_personalInformation
def additionalIn = endorsementOptions.modify_additionalInsured
def upgradeInternationalCoverages = execution.getVariable('upgradeCareerCoverage')
def AdditionalInsuredOption= execution.getVariable('AdditionalInsuredOption')

def scubaFit = execution.getVariable('scubaFit')
def cylinder = execution.getVariable('cylinder')
def excessLiability = execution.getVariable('excessLiability')
def paymentOptions = execution.getVariable('paymentOptions')
def initiatedByCsr = execution.getVariable('initiatedByCsr')

boolean result0 = false
boolean result1 = false
boolean result3 = false
boolean result4 = false
boolean result5 = false
boolean result6 = true
boolean result7 = false
boolean result8 = false

if(personalInfo){
    if (country != "United States of America" &amp;&amp; country != "Mexico" &amp;&amp; country != "The Bahamas" &amp;&amp; country != "Turks and Caicos" &amp;&amp; country != "British Virgin Islands" &amp;&amp; country != "Cayman Islands" &amp;&amp; country != "Jamaica" &amp;&amp; country != "Aruba" &amp;&amp; country != "Curacao" &amp;&amp; country != "Grenada" &amp;&amp; country != "Barbados" &amp;&amp; country != "St Lucia" &amp;&amp; country != "Trinidad and Tobago" &amp;&amp; country != "Belize" &amp;&amp; country != "Costa Rica" &amp;&amp; country != "Dominican Republic" &amp;&amp; country != "Dominica" &amp;&amp; country != "Martinique" &amp;&amp; country != "Anguilla" &amp;&amp; country != "St Kitts and Nevis") {
	    result8 = true;
    }
}
if(cylinder){
  if(cylinder == "cylinderInspector" || cylinder == "cylinderInspectionInstructor"){
    result5 = true
  }  
}
if (excessLiability) {
  if (excessLiability == "excessLiabilityCoverage3000000" || excessLiability == "excessLiabilityCoverage4000000" || excessLiability == "excessLiabilityCoverage9000000") {
    result7 = true;
  }
}
if(coverage || AdditionalInsuredOption){
if (AdditionalInsuredOption== 'addAdditionalInsureds') {
 additionalInsured.each {
  if (it.hasProperty('businessRelation') &amp;&amp; it.businessRelation == 'other') {
    result1 = true
  }
  if (it.hasProperty('doYouHaveAWrittenContract') &amp;&amp; it.doYouHaveAWrittenContract=='no'){
    result1 = true
}
 }
}
if(upgradeInternationalCoverages == "internationalInstructor" || upgradeInternationalCoverages == "internationalAssistantInstructor" || upgradeInternationalCoverages == "internationalDivemaster" || upgradeInternationalCoverages =="internationalNonteachingSupervisoryInstructor" || upgradeInternationalCoverages == "internationalDivemasterAssistantInstructorAssistingOnly"){
	result4 = true
}
}


if(coverage &amp;&amp; paymentOptions){
  if(paymentOptions == "creditCard"){
    result6 = false
  }
}

if((initiatedByCsr == false || initiatedByCsr == "false" || initiatedByCsr == "") &amp;&amp; (tecRecEndorsment == "accepted" || result1 || result4 || result8 || scubaFit == "scubaFitInstructor" || result5||result6||result7 || result0)) {
  result3=true
}
execution.setVariable('CSRReviewRequired', result3)

if(result3){
	execution.setVariable('policyStatus', 'Pending Approval')	
}


if(initiatedByCsr == true &amp;&amp; (approved == "rejected" || approved == "onHold")){	
  execution.setVariable('RejectedPolicy', true)	
}else{  	
  execution.setVariable('RejectedPolicy', false)
}</camunda:script>
        </camunda:executionListener>
        <camunda:inputOutput>
          <camunda:inputParameter name="commands">
            <camunda:list>
              <camunda:value>{"command" : "delegate", "delegate":"ProcessEndorsementAttachments"}</camunda:value>
              <camunda:value>{"command" : "fileSave"}</camunda:value>
            </camunda:list>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1m44nyk</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1ckr5am</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_1m44nyk" sourceRef="StartEvent_0qetve8" targetRef="Task_1jrn5e5" />
    <bpmn:sequenceFlow id="SequenceFlow_1ckr5am" sourceRef="Task_1jrn5e5" targetRef="ExclusiveGateway_0spajg7" />
    <bpmn:sequenceFlow id="SequenceFlow_1v1dk1z" sourceRef="ExclusiveGateway_0spajg7" targetRef="Task_037h9gn">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${RejectedPolicy == true}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:exclusiveGateway id="ExclusiveGateway_1t3bugk">
      <bpmn:incoming>SequenceFlow_0bb7law</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1r8i61y</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="SequenceFlow_0bb7law" sourceRef="Task_037h9gn" targetRef="ExclusiveGateway_1t3bugk">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${approved == "rejected"}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="SequenceFlow_1r8i61y" sourceRef="ExclusiveGateway_1t3bugk" targetRef="Task_00721gd" />
    <bpmn:serviceTask id="Task_00721gd" name="CSR Cancel policy Mail" camunda:expression="0">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="commands">
            <camunda:list>
              <camunda:value>{"command" : "delegate", "delegate" : "CsrRejection"}</camunda:value>
            </camunda:list>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1r8i61y</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1yna7t6</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_1yna7t6" sourceRef="Task_00721gd" targetRef="UserTask_14i3m9l" />
    <bpmn:sequenceFlow id="SequenceFlow_0isa8vl" name="Approved" sourceRef="UserTask_14i3m9l" targetRef="ServiceTask_1nlbeez">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${approved=="accepted"}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="IPLEndorsement">
      <bpmndi:BPMNEdge id="SequenceFlow_0isa8vl_di" bpmnElement="SequenceFlow_0isa8vl">
        <di:waypoint x="654" y="364" />
        <di:waypoint x="895" y="364" />
        <di:waypoint x="895" y="178" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="836" y="255" width="47" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1yna7t6_di" bpmnElement="SequenceFlow_1yna7t6">
        <di:waypoint x="447" y="706" />
        <di:waypoint x="447" y="384" />
        <di:waypoint x="554" y="384" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1r8i61y_di" bpmnElement="SequenceFlow_1r8i61y">
        <di:waypoint x="692" y="681" />
        <di:waypoint x="692" y="746" />
        <di:waypoint x="497" y="746" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0bb7law_di" bpmnElement="SequenceFlow_0bb7law">
        <di:waypoint x="654" y="545" />
        <di:waypoint x="692" y="545" />
        <di:waypoint x="692" y="631" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1v1dk1z_di" bpmnElement="SequenceFlow_1v1dk1z">
        <di:waypoint x="590" y="151" />
        <di:waypoint x="305" y="375" />
        <di:waypoint x="305" y="644" />
        <di:waypoint x="604" y="644" />
        <di:waypoint x="604" y="585" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1ckr5am_di" bpmnElement="SequenceFlow_1ckr5am">
        <di:waypoint x="468" y="140" />
        <di:waypoint x="579" y="140" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1m44nyk_di" bpmnElement="SequenceFlow_1m44nyk">
        <di:waypoint x="214" y="140" />
        <di:waypoint x="367" y="140" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_16l2dji_di" bpmnElement="SequenceFlow_16l2dji">
        <di:waypoint x="604" y="505" />
        <di:waypoint x="604" y="404" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_12e5vo3_di" bpmnElement="SequenceFlow_12e5vo3">
        <di:waypoint x="554" y="364" />
        <di:waypoint x="403" y="364" />
        <di:waypoint x="403" y="545" />
        <di:waypoint x="554" y="545" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1qz971h_di" bpmnElement="SequenceFlow_1qz971h">
        <di:waypoint x="945" y="138" />
        <di:waypoint x="1102" y="138" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1gaibuf_di" bpmnElement="SequenceFlow_1gaibuf">
        <di:waypoint x="629" y="140" />
        <di:waypoint x="845" y="140" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="765" y="123" width="19" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_11738jy_di" bpmnElement="SequenceFlow_11738jy">
        <di:waypoint x="604" y="165" />
        <di:waypoint x="604" y="324" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="612" y="244" width="14" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="StartEvent_0qetve8_di" bpmnElement="StartEvent_0qetve8">
        <dc:Bounds x="177" y="122" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="156" y="165" width="79" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ExclusiveGateway_0spajg7_di" bpmnElement="ExclusiveGateway_0spajg7" isMarkerVisible="true">
        <dc:Bounds x="579" y="115" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="577.5" y="77.5" width="53" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_1nlbeez_di" bpmnElement="ServiceTask_1nlbeez">
        <dc:Bounds x="845" y="98" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="EndEvent_1ki3ogb_di" bpmnElement="EndEvent_1ki3ogb">
        <dc:Bounds x="1102" y="120" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1093" y="163" width="54" height="40" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="UserTask_14i3m9l_di" bpmnElement="UserTask_14i3m9l">
        <dc:Bounds x="554" y="324" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_0wrh5u3_di" bpmnElement="Task_037h9gn">
        <dc:Bounds x="554" y="505" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_0ptuo61_di" bpmnElement="Task_1jrn5e5">
        <dc:Bounds x="367" y="100" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ExclusiveGateway_1t3bugk_di" bpmnElement="ExclusiveGateway_1t3bugk" isMarkerVisible="true">
        <dc:Bounds x="667" y="631" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_1cmtn65_di" bpmnElement="Task_00721gd">
        <dc:Bounds x="397" y="706" width="100" height="80" />
      </bpmndi:BPMNShape>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
