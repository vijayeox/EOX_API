<?php

declare(strict_types=1);

namespace Migrations;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

/**
 * Auto-generated Migration: Please modify to your needs!
 */
final class Version20200903124040 extends AbstractMigration
{
    public function getDescription() : string
    {
        return 'Rename Organization Table to Account';
    }

    public function up(Schema $schema) : void
    {
        $this->addSql("RENAME TABLE ox_organization TO ox_account
                                    ox_organization_profile TO ox_organization
                                    ox_user_org TO ox_account_user
                                    ox_user_profile To ox_person");
        //Organization -> Account
        $this->addSql("ALTER TABLE ox_account CHANGE `org_profile_id` `organization_id` INT(32)");

        //user_org -> account_user
        $this->addSql("ALTER TABLE ox_account_user ADD `id` int(32) NOT NULL 
                        AUTO_INCREMENT primary key FIRST");
        $this->addSql("ALTER TABLE ox_account_user CHANGE `org_id` `account_id` INT(32)");
        //role
        $this->addSql("ALTER TABLE ox_role CHANGE `org_id` `account_id` INT(32)");
        $this->addSql("ALTER TABLE ox_role_privilege CHANGE `org_id` `account_id` INT(32)");
        //user
        $this->addSql("ALTER TABLE ox_user CHANGE `user_profile_id` `person_id` INT(32)");
        $this->addSql("ALTER TABLE ox_user CHANGE `orgid` `account_id` INT(32)");
        //user_role
        $this->addSql("ALTER TABLE ox_user_role ADD COLUMN `account_user_id` INT(32),
                        ADD CONSTRAINT FOREIGN KEY (`account_user_id`) REFERENCES ox_account_user(`id`)");
        $this->addSql("UPDATE ox_user_role 
                        inner join ox_user u on ox_user_role.user_id = u.id
                        inner join ox_account_user au on u.id=au.user_id and 
                                                         u.account_id = au.account_id
                        SET ox_user_role.account_user_id = au.id")
        $this->addSql("ALTER TABLE ox_user_role DROP COLUMN `user_id`");
        //user_profile -> person
        $this->addSql("ALTER TABLE ox_person DROP COLUMN `org_id`");
        //user_session
        $this->addSql("ALTER TABLE ox_user_session CHANGE `org_id` `account_id` INT(32)");
        //activity_instance
        $this->updateOrgId("ox_activity_instance");
        //alert
        $this->updateOrgId("ox_alert");
        //announcement
        $this->updateOrgId("ox_announcement");
        //app_category
        $this->updateOrgId("ox_app_category");
        //app_registry
        $this->updateOrgId("ox_app_registry");
        //attachment
        $this->updateOrgId("ox_attachment");
        //comment
        $this->updateOrgId("ox_comment");
        //dashboard
        $this->updateOrgId("ox_dashboard");
        //datasource
        $this->updateOrgId("ox_datasource");
        //employee
        $this->addSql("ALTER TABLE ox_employee DROP COLUMN `org_id`");
        $this->addSql("ALTER TABLE ox_employee CHANGE `org_profile_id` `org_id` INT(32)");
        $this->addSql("ALTER TABLE ox_employee CHANGE `user_profile_id` `person_id` INT(32)");
        $this->addSql("ALTER TABLE ox_employee_manager ADD COLUMN `manager_id` INT(32)
                        ADD CONSTRAINT FOREIGN KEY (`manager_id`) REFERENCES ox_employee(`id`)");
        $this->addSql("UPDATE ox_employee e
                        inner join ox_user u on u.id = e.managerid
                        inner join ox_employee man = man.person_id = u.person_id
                        SET e.manager_id = man.id");
        $this->addSql("ALTER TABLE ox_employee DROP COLUMN `managerid`");
        //file
        $this->addSql("DROP TRIGGER IF EXISTS `ox_file_insert`");
        $this->addSql("DROP TRIGGER IF EXISTS `ox_file_update`");
        $this->addSql("DROP TRIGGER IF EXISTS `ox_file_delete`");
        $this->updateOrgId("ox_file");
        //file_audit_log
        $this->updateOrgId("ox_file_audit_log");
        $this->setupFileAuditLogTriggers();
        //file_document
        $this->updateOrgId("ox_file_document");
        //file_participant
        $this->updateOrgId("ox_file_participant");
        //file_attachment
        $this->updateOrgId("ox_file_attachment");
        //file_attribute
        $this->updateOrgId("ox_file_attribute");
        //indexed_file_attribute
        $this->updateOrgId("ox_indexed_file_attribute");
        //group
        $this->updateOrgId("ox_group");
        //metafield
        $this->updateOrgId("ox_metafield");
        //mlet
        $this->updateOrgId("ox_mlet", 'orgid');
        //org_business_role
        $this->updateOrgId("ox_business_role");
        //payment
        $this->updateOrgId("ox_payment");
        //project
        $this->updateOrgId("ox_project");
        //query
        $this->updateOrgId("ox_query");
        //splashpage
        $this->updateOrgId("ox_splashpage");
        //subscriber
        $this->updateOrgId("ox_subscriber");
        //target
        $this->updateOrgId("ox_target");
        //visualization
        $this->updateOrgId("ox_visualization");
        //widget
        $this->updateOrgId("ox_widget");
        //workflow_instance
        $this->updateOrgId("ox_workflow_instance");
        //user_manager -> employee_manager
        $this->addSql("RENAME TABLE ox_user_manager TO ox_employee_manager");
        $this->addSql("ALTER TABLE ox_employee_manager CHANGE `manager_id` `old_manager_id` INT(32)");

        $this->addSql("ALTER TABLE ox_employee_manager ADD COLUMN `employee_id` INT(32)
                        ADD CONSTRAINT FOREIGN KEY (`employee_id`) REFERENCES ox_employee(`id`)");
        $this->addSql("ALTER TABLE ox_employee_manager ADD COLUMN `manager_id` INT(32)
                        ADD CONSTRAINT FOREIGN KEY (`manager_id`) REFERENCES ox_employee(`id`)");
        $this->addSql("UPDATE ox_employee_manager em
                        INNER JOIN ox_user u on u.id = em.user_id
                        inner join ox_employee e on e.person_id = u.person_id
                        SET em.employee_id = e.id");
        $this->addSql("UPDATE ox_employee_manager em
                        INNER JOIN ox_user u on u.id = em.old_manager_id
                        inner join ox_employee e on e.person_id = u.person_id
                        SET em.manager_id = e.id");
        $this->addSql("ALTER TABLE ox_employee_manager DROP COLUMN `old_manager_id`");
        //wf_user_identifier
        $this->addSql("ALTER TABLE $tableName CHANGE `org_id` `account_id` INT(32)");
    }

    private function updateOrgId($tableName, $orgColumn = 'org_id'){
        $this->addSql("ALTER TABLE $tableName CHANGE `$orgColumn` `account_id` INT(32)");
        $this->addSql("ALTER TABLE $tableName ADD COLUMN `org_id` INT(32) 
                        AFTER `account_id`, 
                        ADD CONSTRAINT FOREIGN KEY (`org_id`) REFERENCES ox_organization(`id`)");
        $this->addSql("UPDATE $tableName 
                        inner join ox_account on $tableName.account_id = ox_account.id
                        SET $tableName.org_id = ox_account.org_id")
        $this->addSql("ALTER TABLE $tableName DROP COLUMN `account_id`"); 
    }

    private function setupFileAuditLogTriggers(){
        $this->addSql("CREATE TRIGGER `ox_file_insert` AFTER INSERT ON `ox_file` FOR EACH ROW INSERT INTO `ox_file_audit_log` (`id`, `action`, `uuid`, `org_id`, `form_id`, `data`, `created_by`,`modified_by`, `date_created`, `date_modified`,`assoc_id`,`is_active`,`entity_id`,`last_workflow_instance_id`,`start_date`,`end_date`,`status`,`version`) VALUES (new.`id`, 'create', new.`uuid`, new.`org_id`, new.`form_id`, new.`data`, new.`created_by`, new.`modified_by`, new.`date_created`, new.`date_modified`,new.`assoc_id`,new.`is_active`,new.`entity_id`,new.`last_workflow_instance_id`,new.`start_date`,new.`end_date`,new.`status`,new.`version`);");
        $this->addSql("CREATE TRIGGER `ox_file_update` AFTER UPDATE on `ox_file` FOR EACH ROW INSERT INTO `ox_file_audit_log` (`id`, `action`, `uuid`, `org_id`, `form_id`, `data`, `created_by`,`modified_by`, `date_created`, `date_modified`,`assoc_id`,`is_active`,`entity_id`,`last_workflow_instance_id`,`start_date`,`end_date`,`status`,`version`) VALUES (new.`id`, 'update', new.`uuid`, new.`org_id`, new.`form_id`, new.`data`, new.`created_by`, new.`modified_by`, new.`date_created`, new.`date_modified`,new.`assoc_id`,new.`is_active`,new.`entity_id`,new.`last_workflow_instance_id`,new.`start_date`,new.`end_date`,new.`status`,new.`version`);");
        $this->addSql("CREATE TRIGGER `ox_file_delete` AFTER DELETE ON ox_file FOR EACH ROW INSERT INTO `ox_file_audit_log` (`id`, `action`, `uuid`, `org_id`, `form_id`, `data`, `created_by`,`modified_by`, `date_created`, `date_modified`,`assoc_id`,`is_active`,`entity_id`,`last_workflow_instance_id`,`start_date`,`end_date`,`status`,`version`) VALUES (old.`id`, 'delete', old.`uuid`, old.`org_id`, old.`form_id`, old.`data`, old.`created_by`, old.`modified_by`, old.`date_created`, old.`date_modified`,old.`assoc_id`,old.`is_active`,old.`entity_id`,old.`last_workflow_instance_id`,old.`start_date`,old.`end_date`,old.`status`,old.`version`);");
    }

    public function down(Schema $schema) : void
    {
        // this down() migration is auto-generated, please modify it to your needs

    }
}
